{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/main-content/leaflet-map/leaflet-map.component.ts","webpack:///src/app/main-content/leaflet-map/leaflet-map.component.html","webpack:///src/app/main-content/main-content.component.ts","webpack:///src/app/main-content/main-content.component.html","webpack:///src/app/main-content/sidebar-view/polyline-style-options/polyline-style-options.component.ts","webpack:///src/app/main-content/sidebar-view/polyline-style-options/polyline-style-options.component.html","webpack:///src/app/main-content/sidebar-view/sidebar-view.component.ts","webpack:///src/app/main-content/sidebar-view/sidebar-view.component.html","webpack:///src/app/shared/app-constants.ts","webpack:///src/app/shared/map-data.service.ts","webpack:///src/app/toolbar/export-data/export-data.component.ts","webpack:///src/app/toolbar/export-data/export-data.component.html","webpack:///src/app/toolbar/toolbar.component.ts","webpack:///src/app/toolbar/toolbar.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","LeafletMapComponent","mapDataService","mapCenter","defaultZoom","minZoom","maxZoom","maxNativeZoom","zoomControl","polylineOptions","color","smoothFactor","weight","dataPoints","dataMarkers","baseLayers","attribution","initMap","setupMapLayers","leafletMap","initMapEvents","subscribeToMapEvents","center","zoom","map","layers","collapsed","addTo","on","event","onMapClick","onMapMouseOver","onMapZoomLevelChanged","getZoom","onMapCenterChanged","getBounds","getCenter","getMapActionEmitter","subscribe","mapActionEvent","drawOrUpdateObjectsOnMap","action","ADD","marker","latlng","push","length","polyline","addLatLng","REMOVE","pop","removeLayer","setLatLngs","CLEAR","forEach","hasLayer","UPDATE_STYLE","setStyle","style","opacity","MainContentComponent","PolylineStyleOptionsComponent","listOfColors","styleViewCloseEvent","subscribeToEvents","getStyleOptionsEventEmitter","options","selectedColor","userSetColor","strokeOpacitySliderSetValue","strokeWeightSliderSetValue","strokeOpacitySliderValue","strokeWeightSliderValue","emit","saveStyles","value","updateStyles","closeStyleOptionsView","updateStrokeOpacity","updateStrokeWeight","saveStyleOptions","SidebarViewComponent","observableData","mouseCursor","show","clearDataPoints","deleteLastDataPoint","closeShape","getMapMouseOverEmitter","lat","lng","getMapCenterChangeEmitter","getMapZoomLevelEmitter","data","concat","next","slice","clearMap","toggleStyleOptions","STREETMAP_TILE_LAYER","STREETMAP_ATTRIBUTION","SATALLITEMAP_TILE_LAYER","SATALLITEMAP_ATTRIBUTION","WIKIMEDIAMAP_TILE_LAYER","WIKIMEDIA_ATTRIBUTION","ACTION","MapDataService","isPolyline","onMapCenterChangeEmitter","onMapMouseOverEmitter","onMapZoomLevelEmitter","mapDataPoints","mapActionEventEmitter","styleOptionsEventEmitter","addDataPoint","convertPolylineToPolygon","blob","Blob","convertToCSV","getDataPoints","type","convertToJSON","item","first","dataArray","array","Object","row","values","join","JSON","stringify","providedIn","ExportDataComponent","exportDataAsJSON","exportDataAsCSV","exportAsJSON","exportAsCSV","ToolbarComponent","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'map-polyline-tool';\n}\n","<app-toolbar></app-toolbar>\n<app-main-content></app-main-content>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSliderModule } from '@angular/material/slider';\n\nimport { ToolbarComponent } from './toolbar/toolbar.component';\nimport { MainContentComponent } from './main-content/main-content.component';\nimport { LeafletMapComponent } from './main-content/leaflet-map/leaflet-map.component';\nimport { SidebarViewComponent } from './main-content/sidebar-view/sidebar-view.component';\nimport { ExportDataComponent } from './toolbar/export-data/export-data.component';\nimport { PolylineStyleOptionsComponent } from './main-content/sidebar-view/polyline-style-options/polyline-style-options.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ToolbarComponent,\n    MainContentComponent,\n    LeafletMapComponent,\n    SidebarViewComponent,\n    ExportDataComponent,\n    PolylineStyleOptionsComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatButtonModule,\n    ScrollingModule,\n    MatIconModule,\n    MatMenuModule,\n    MatSliderModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { AfterViewInit, Component, OnInit } from '@angular/core';\nimport * as L from 'leaflet';\nimport { STREETMAP_TILE_LAYER, STREETMAP_ATTRIBUTION, ACTION } from 'src/app/shared/app-constants';\nimport { SATALLITEMAP_TILE_LAYER, SATALLITEMAP_ATTRIBUTION } from 'src/app/shared/app-constants';\nimport { MapActionEvent } from 'src/app/shared/map-action-event.model';\n\n\nimport { MapDataService } from '../../shared/map-data.service';\n\n@Component({\n  selector: 'app-leaflet-map',\n  templateUrl: './leaflet-map.component.html',\n  styleUrls: ['./leaflet-map.component.css']\n})\nexport class LeafletMapComponent implements OnInit, AfterViewInit {\n\n  private leafletMap: L.Map;\n  private mapCenter: L.LatLngExpression = [18.51, 80.81];\n  private defaultZoom = 4;\n  private minZoom = 2;\n  private maxZoom = 21;\n  private maxNativeZoom = 19;\n  private zoomControl = true;\n  private polylineOptions = { color: 'red', smoothFactor: 1, weight: 4 };\n  private polyline: L.Polyline;\n  private dataPoints: L.LatLng[] = [];\n  private dataMarkers: L.Marker[] = [];\n\n  private baseLayers = {\n    'Street': L.tileLayer(STREETMAP_TILE_LAYER,\n      {\n        attribution: STREETMAP_ATTRIBUTION,\n        maxNativeZoom: this.maxNativeZoom,\n        maxZoom: this.maxZoom\n      }),\n    'Satellite': L.tileLayer(SATALLITEMAP_TILE_LAYER,\n      {\n        attribution: SATALLITEMAP_ATTRIBUTION,\n        maxNativeZoom: this.maxNativeZoom,\n        maxZoom: this.maxZoom\n      })\n  };\n\n  constructor(private mapDataService: MapDataService) { }\n\n  public ngOnInit(): void { }\n\n  public ngAfterViewInit(): void {\n    this.initMap();\n    this.setupMapLayers(this.leafletMap);\n    this.initMapEvents();\n    this.subscribeToMapEvents();\n  }\n\n  private initMap(): void {\n    this.leafletMap = L.map('leaflet-map', {\n      center: this.mapCenter,\n      minZoom: this.minZoom,\n      zoom: this.defaultZoom,\n      zoomControl: this.zoomControl\n    });\n  }\n\n  private setupMapLayers(map: L.Map) {\n    L.control.layers(this.baseLayers, null, { collapsed: true }).addTo(map);\n    this.baseLayers[\"Street\"].addTo(map);\n  }\n\n  private initMapEvents() {\n    this.leafletMap.on('click', (event: L.MouseEvent) => {\n      this.mapDataService.onMapClick(event);\n    });\n\n    this.leafletMap.on('mousemove', (event: L.MouseEvent) => {\n      this.mapDataService.onMapMouseOver(event);\n    });\n\n    this.leafletMap.on('zoom', () => {\n      this.mapDataService.onMapZoomLevelChanged(this.leafletMap.getZoom());\n    });\n\n    this.leafletMap.on('move', () => {\n      this.mapDataService.onMapCenterChanged(this.leafletMap.getBounds().getCenter());\n    });\n\n    this.mapDataService.onMapZoomLevelChanged(this.leafletMap.getZoom());\n    this.mapDataService.onMapCenterChanged(this.leafletMap.getBounds().getCenter());\n  }\n\n  private subscribeToMapEvents() {\n    this.mapDataService.getMapActionEmitter().subscribe(mapActionEvent => {\n      this.drawOrUpdateObjectsOnMap(mapActionEvent);\n    });\n  }\n\n  private drawOrUpdateObjectsOnMap(mapActionEvent: MapActionEvent) {\n\n    switch (mapActionEvent.action) {\n\n      case ACTION.ADD:\n        var marker = L.marker(mapActionEvent.latlng).addTo(this.leafletMap);\n        this.dataMarkers.push(marker);\n\n        this.dataPoints.push(mapActionEvent.latlng);\n        if (this.dataPoints.length == 2) {\n          this.polyline = L.polyline(this.dataPoints, this.polylineOptions).addTo(this.leafletMap);\n        }\n        else if (this.dataPoints.length > 2) {\n          this.polyline.addLatLng(mapActionEvent.latlng);\n        }\n        break;\n\n      case ACTION.REMOVE:\n\n        if (this.dataMarkers.length > 0) {\n          var marker = this.dataMarkers.pop();\n          this.leafletMap.removeLayer(marker);\n        }\n\n        if (this.dataPoints.length > 0) {\n          this.dataPoints.pop();\n          this.polyline.setLatLngs(this.dataPoints);\n        }\n        break;\n\n      case ACTION.CLEAR:\n\n        this.dataMarkers.forEach(marker => {\n          this.leafletMap.removeLayer(marker);\n        });\n\n        if (this.leafletMap.hasLayer(this.polyline)) {\n          this.leafletMap.removeLayer(this.polyline);\n        }\n        this.dataMarkers.length = 0;\n        this.dataPoints.length = 0;\n\n        break;\n\n      case ACTION.UPDATE_STYLE:\n\n        this.polyline.setStyle({\n          color: mapActionEvent.style.color,\n          opacity: mapActionEvent.style.opacity,\n          weight: mapActionEvent.style.weight\n        });\n        this.polylineOptions.color = mapActionEvent.style.color;\n        this.polylineOptions.smoothFactor = mapActionEvent.style.opacity;\n        this.polylineOptions.weight = mapActionEvent.style.weight;\n\n        break;\n    }\n  }\n}\n","<div class=\"map-container\" id=\"leaflet-map\"></div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main-content',\n  templateUrl: './main-content.component.html',\n  styleUrls: ['./main-content.component.css']\n})\nexport class MainContentComponent implements OnInit {\n\n  constructor() { }\n\n  public ngOnInit(): void {\n  }\n\n}\n","<div class=\"main-content\">\n    <app-leaflet-map></app-leaflet-map>\n    <app-sidebar-view></app-sidebar-view>\n</div>","import { EventEmitter, Output } from '@angular/core';\nimport { Input } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { ACTION } from 'src/app/shared/app-constants';\nimport { MapDataService } from 'src/app/shared/map-data.service';\nimport { StyleOptions } from 'src/app/shared/style-options.model';\n\n@Component({\n  selector: 'app-polyline-style-options',\n  templateUrl: './polyline-style-options.component.html',\n  styleUrls: ['./polyline-style-options.component.css']\n})\nexport class PolylineStyleOptionsComponent implements OnInit {\n\n  public listOfColors: string[] = [\n    '#ffffff',\n    '#000105',\n    '#3e6158',\n    '#3f7a89',\n    '#96c582',\n    '#b7d5c4',\n    '#bcd6e7',\n    '#7c90c1',\n    '#9d8594',\n    '#dad0d8',\n    '#4b4fce',\n    '#4e0a77',\n    '#a367b5',\n    '#ee3e6d',\n    '#d63d62',\n    '#f46600',\n    '#cf0500',\n    '#efabbd',\n    '#8e0622',\n    '#f0b89a',\n    '#f0ca68',\n    '#62382f',\n    '#c97545',\n    '#c1800b'\n  ];\n\n  @Input() color: string;\n  @Output() styleViewCloseEvent = new EventEmitter<boolean>();\n  public selectedColor: string;\n  public strokeOpacitySliderValue;\n  public strokeWeightSliderValue;\n  public strokeOpacitySliderSetValue;\n  public strokeWeightSliderSetValue;\n  private userSetColor;\n\n  constructor(private mapDataService: MapDataService) { }\n\n  public ngOnInit(): void {\n    this.subscribeToEvents();\n  }\n\n  private subscribeToEvents() {\n    this.mapDataService.getStyleOptionsEventEmitter().subscribe(options => {\n      this.color = options.color;\n      this.selectedColor = options.color;\n      this.userSetColor = options.color;\n      this.strokeOpacitySliderSetValue = options.opacity;\n      this.strokeWeightSliderSetValue = options.weight;\n      this.strokeOpacitySliderValue = options.opacity;\n      this.strokeWeightSliderValue = options.weight;\n    });\n  }\n\n  public closeStyleOptionsView() {\n    this.styleViewCloseEvent.emit(true);\n    let style: StyleOptions = {\n      'color': this.userSetColor,\n      'opacity': this.strokeOpacitySliderSetValue,\n      'weight': this.strokeWeightSliderSetValue\n    };\n    this.mapDataService.saveStyles(style);\n  }\n\n  public changeColor(color: string): void {\n    this.color = color;\n  }\n\n  public updateStrokeOpacity(event) {\n    this.strokeOpacitySliderValue = event.value;\n  }\n\n  public updateStrokeWeight(event) {\n    this.strokeWeightSliderValue = event.value;\n  }\n\n  public saveStyleOptions() {\n    this.selectedColor = this.color;\n    this.userSetColor = this.color;\n    this.strokeOpacitySliderSetValue = this.strokeOpacitySliderValue;\n    this.strokeWeightSliderSetValue = this.strokeWeightSliderValue;\n\n    let style: StyleOptions = {\n      'color': this.color,\n      'opacity': this.strokeOpacitySliderSetValue,\n      'weight': this.strokeWeightSliderSetValue\n    };\n\n    this.mapDataService.updateStyles({\n      'action': ACTION.UPDATE_STYLE,\n      'style': style\n    });\n\n    this.mapDataService.saveStyles(style);\n    this.styleViewCloseEvent.emit(true);\n  }\n}\n","<div class=\"opened\">\n\n  <p class=\"close\" (click)=\"closeStyleOptionsView()\">&times;</p>\n\n  <div class=\"summary-info\">\n    <div class=\"info\">\n      <p class=\"style\">Selected color</p>\n      <p class=\"style-value\">{{ selectedColor }}</p>\n    </div>\n    <div class=\"circle\" [ngStyle]=\"{'background': color}\"></div>\n  </div>\n\n  <br>\n  <h3>Stroke Color</h3>\n  <div class=\"colors\">\n    <div (click)=\"changeColor(paint)\" *ngFor=\"let paint of listOfColors\" class=\"circle\"\n      [ngStyle]=\"{'background': paint}\"></div>\n  </div>\n\n  <br>\n  <h3>Stroke Opacity</h3>\n  <mat-slider color=\"primary\" #strokeOpacity [thumbLabel]=\"true\" min=\"0\" max=\"1\" step=\"0.1\"\n    [value]=\"strokeOpacitySliderSetValue\" (change)=\"updateStrokeOpacity($event)\"></mat-slider>\n\n  <br><br>\n  <h3>Stroke Weight</h3>\n  <mat-slider color=\"primary\" #strokeWeight [thumbLabel]=\"true\" min=\"0\" max=\"20\" step=\"1\"\n    [value]=\"strokeWeightSliderSetValue\" (change)=\"updateStrokeWeight($event)\"></mat-slider>\n\n  <br><br>\n  <p>Click on save to apply the changes</p>\n  <button mat-raised-button color=\"primary\" (click)=\"saveStyleOptions()\">Save</button>\n</div>","import { Component, OnInit } from '@angular/core';\nimport * as L from 'leaflet';\nimport { MapDataService } from 'src/app/shared/map-data.service';\nimport { BehaviorSubject } from 'rxjs';\nimport { ACTION } from 'src/app/shared/app-constants';\n\n@Component({\n  selector: 'app-sidebar-view',\n  templateUrl: './sidebar-view.component.html',\n  styleUrls: ['./sidebar-view.component.css']\n}) \nexport class SidebarViewComponent implements OnInit {\n\n  public observableData = new BehaviorSubject<L.Latlng[]>([]);\n  public mouseCursor = 'Move cursor';\n  public mapCenter;\n  public zoom: number;\n  public show: boolean = false;\n\n  constructor(private mapDataService: MapDataService) { }\n\n  public ngOnInit(): void {\n    this.subscribeToMapEvents();\n  }\n\n  public clearMap() {\n    this.mapDataService.clearDataPoints();\n  }\n\n  public deleteLastDataPoint() {\n    this.mapDataService.deleteLastDataPoint()\n  }\n\n  public closeShape() {\n    this.mapDataService.closeShape();\n  }\n\n  public toggleStyleOptions() {\n    this.show = !this.show;\n  }\n\n  public closeStyleViewEvent(event) {\n    this.show = false;\n  }\n\n  private subscribeToMapEvents() {\n    this.mapDataService.getMapMouseOverEmitter().subscribe((event) => {\n      this.mouseCursor = (event as L.MouseEvent).latlng.lat + ', ' + (event as L.MouseEvent).latlng.lng;\n    });\n\n    this.mapDataService.getMapCenterChangeEmitter().subscribe(event => {\n      this.mapCenter = (event as L.latlng).lat + ', ' + (event as L.latlng).lng;\n    });\n\n    this.mapDataService.getMapZoomLevelEmitter().subscribe(event => {\n      this.zoom = event as number;\n    });\n\n    this.mapDataService.getMapActionEmitter().subscribe(event => {\n\n      switch (event.action) {\n        case ACTION.ADD:\n          var data = this.observableData.value.concat(event.latlng);\n          this.observableData.next(data);\n          break;\n\n        case ACTION.REMOVE:\n          var data = this.observableData.value.slice(0, -1);\n          this.observableData.next(data);\n          break;\n\n        case ACTION.CLEAR:\n          var data = this.observableData.value.slice(0, 0);\n          this.observableData.next(data);\n      }\n    });\n  }\n}\n","<div class=\"side-bar-view\">\n\n  <button class=\"button-row\" color=\"accent\" mat-raised-button (click)=\"clearMap()\">Clear map</button>\n\n  <button class=\"button-row\" color=\"accent\" mat-raised-button (click)=\"deleteLastDataPoint()\">Undo</button>\n\n  <button class=\"button-row\" color=\"accent\" mat-raised-button (click)=\"closeShape()\">Close shape</button>\n\n  <button class=\"button-row\" color=\"accent\" mat-raised-button (click)=\"toggleStyleOptions()\">Style options</button>\n\n  <app-polyline-style-options *ngIf=\"show\" (styleViewCloseEvent)=\"closeStyleViewEvent($event)\">\n  </app-polyline-style-options>\n\n  <p class=\"text-row\"><b>Map center :</b> {{ mapCenter }}</p>\n\n  <p class=\"text-row\"><b>Zoom level :</b> {{ zoom }}</p>\n\n  <p class=\"text-row\"><b>Mouse cursor :</b> {{ mouseCursor }}</p>\n\n  <cdk-virtual-scroll-viewport class=\"cdk-viewport\" [itemSize]=\"20\">\n    <div *cdkVirtualFor=\"let item of observableData | async; let i = index; templateCacheSize: 0\" class=\"item\">\n      {{item.lat}} , {{item.lng}}\n    </div>\n  </cdk-virtual-scroll-viewport>\n\n  <p class=\"dev-info\">Created by<a class=\"dev-info\" href=\"https://github.com/sarweshkumar47\"\n    target=\"_blank\">Sarweshkumar C R</a><span style=\"float:right;\">Version 1.0.0</span></p>\n\n</div>","export const STREETMAP_TILE_LAYER = 'http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png';\nexport const STREETMAP_ATTRIBUTION = '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors';\n\nexport const SATALLITEMAP_TILE_LAYER = 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}';\nexport const SATALLITEMAP_ATTRIBUTION = 'Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community';\n\nexport const WIKIMEDIAMAP_TILE_LAYER = 'https://maps.wikimedia.org/osm-intl/{z}/{x}/{y}{r}.png';\nexport const WIKIMEDIA_ATTRIBUTION = '<a href=\"https://wikimediafoundation.org/wiki/Maps_Terms_of_Use\">Wikimedia</a>';\n\nexport enum ACTION { ADD, REMOVE, CLEAR, UPDATE_STYLE };","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs/internal/Subject';\nimport * as L from 'leaflet';\nimport { saveAs } from 'file-saver';\nimport { MapActionEvent } from './map-action-event.model';\nimport { ACTION } from './app-constants';\nimport { BehaviorSubject } from 'rxjs';\nimport { StyleOptions } from './style-options.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MapDataService {\n\n  private isPolyline: boolean = true;\n  private onMapCenterChangeEmitter = new Subject();\n  private onMapMouseOverEmitter = new Subject();\n  private onMapZoomLevelEmitter = new Subject();\n  private mapDataPoints: L.Latlng[] = [];\n  private mapActionEventEmitter = new Subject<MapActionEvent>();\n  private styleOptionsEventEmitter = new BehaviorSubject<StyleOptions>({\n    color: '#cf0500',\n    opacity: 1,\n    weight: 4\n  });\n\n  constructor() { }\n\n  public onMapClick(event) {\n    if (!this.isPolyline) {\n      this.deleteLastDataPoint();\n    }\n    this.addDataPoint(event)\n    this.isPolyline = true;\n  }\n\n  public onMapMouseOver(event) {\n    this.onMapMouseOverEmitter.next(event);\n  }\n\n  public onMapZoomLevelChanged(zoom: number) {\n    this.onMapZoomLevelEmitter.next(zoom);\n  }\n\n  public onMapCenterChanged(center: L.LatLng) {\n    this.onMapCenterChangeEmitter.next(center);\n  }\n\n  public getDataPoints() {\n    return this.mapDataPoints;\n  }\n\n  public getMapActionEmitter() {\n    return this.mapActionEventEmitter;\n  }\n\n  public getMapMouseOverEmitter() {\n    return this.onMapMouseOverEmitter;\n  }\n\n  public getMapZoomLevelEmitter() {\n    return this.onMapZoomLevelEmitter;\n  }\n\n  public getMapCenterChangeEmitter() {\n    return this.onMapCenterChangeEmitter;\n  }\n\n  public getStyleOptionsEventEmitter() {\n    return this.styleOptionsEventEmitter;\n  }\n\n  public deleteLastDataPoint() {\n    this.mapDataPoints.pop();\n    this.mapActionEventEmitter.next({ action: ACTION.REMOVE });\n  }\n\n  public clearDataPoints() {\n    this.mapDataPoints.length = 0;\n    this.mapActionEventEmitter.next({ action: ACTION.CLEAR });\n  }\n\n  public closeShape() {\n    this.convertPolylineToPolygon();\n  }\n\n  public updateStyles(event: MapActionEvent) {\n    this.mapActionEventEmitter.next(event);\n  }\n\n  public saveStyles(options: StyleOptions) {\n    this.styleOptionsEventEmitter.next(options);\n  }\n\n  public exportDataAsCSV() {\n    const blob = new Blob([(this.convertToCSV(this.getDataPoints()))], { type: 'application/csv' });\n    saveAs(blob, 'data.csv');\n  }\n\n  public exportDataAsJSON() {\n    const blob = new Blob([(this.convertToJSON(this.getDataPoints()))], { type: 'application/json' });\n    saveAs(blob, 'data.json');\n  }\n\n  private addDataPoint(event: L.MouseEvent) {\n    var item: L.Latlng = event.latlng;\n    this.mapDataPoints.push(item);\n    this.mapActionEventEmitter.next({ action: ACTION.ADD, latlng: item });\n  }\n\n  private convertPolylineToPolygon() {\n    // Append the first datapoint to the end of the array when \n    // length of the array is > 2\n    if (this.mapDataPoints.length > 2) {\n      var first = this.mapDataPoints[0];\n      this.mapDataPoints.push(first);\n      this.mapActionEventEmitter.next({ action: ACTION.ADD, latlng: first });\n      this.isPolyline = false;\n    }\n  }\n\n  private convertToCSV(dataArray) {\n    const array = [Object.keys(dataArray[0])].concat(dataArray);\n    return array.map(row => {\n      return Object.values(row);\n    }).join('\\n');\n  }\n\n  private convertToJSON(dataArray) {\n    return JSON.stringify(dataArray);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MapDataService } from 'src/app/shared/map-data.service';\n\n@Component({\n  selector: 'app-export-data',\n  templateUrl: './export-data.component.html',\n  styleUrls: ['./export-data.component.css']\n})\nexport class ExportDataComponent implements OnInit {\n\n  constructor(private mapDataService: MapDataService) { }\n\n  public ngOnInit(): void {\n  }\n\n  public exportAsJSON(event) {\n    this.mapDataService.exportDataAsJSON();\n  }\n\n  public exportAsCSV(event) {\n    this.mapDataService.exportDataAsCSV();\n  }\n}\n","<div class=\"export-data-options\">\n    <button mat-stroked-button color=\"accent\" [matMenuTriggerFor]=\"menu\" style=\"font-size: large;\">Export As\n    </button>\n    <mat-menu #menu=\"matMenu\">\n        <button mat-menu-item (click)=\"exportAsJSON($event)\">JSON</button>\n        <button mat-menu-item (click)=\"exportAsCSV($event)\">CSV</button>\n    </mat-menu>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-toolbar',\n  templateUrl: './toolbar.component.html',\n  styleUrls: ['./toolbar.component.css']\n})\nexport class ToolbarComponent implements OnInit {\n\n  constructor() { }\n\n  public ngOnInit(): void {\n  }\n  \n}\n","<div>\n  <mat-toolbar color=\"primary\">\n    <span>Map polyline tool</span>\n\n    <span class=\"toolbar-spacer\"></span>\n\n    <app-export-data></app-export-data>\n\n    <a class=\"dev-info\" href=\"https://github.com/sarweshkumar47/map-polyline-tool\" target=\"_blank\">Source on Github</a>\n\n  </mat-toolbar>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}